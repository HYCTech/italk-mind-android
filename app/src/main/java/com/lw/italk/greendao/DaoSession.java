package com.lw.italk.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.lw.italk.gson.friend.GetAddFrienditem;
import com.lw.italk.gson.msg.MsgItem;
import com.lw.italk.gson.group.GroupItem;
import com.lw.italk.greendao.model.Message;
import com.lw.italk.greendao.model.BlackList;
import com.lw.italk.greendao.model.Group;
import com.lw.italk.greendao.model.Contact;
import com.lw.italk.greendao.model.SearchAdd;
import com.lw.italk.greendao.model.UserInfo;
import com.lw.italk.greendao.model.Conversation;
import com.lw.italk.greendao.model.ChatLog;
import com.lw.italk.greendao.model.RequestTime;
import com.lw.italk.greendao.model.GroupMember;

import com.lw.italk.greendao.GetAddFrienditemDao;
import com.lw.italk.greendao.MsgItemDao;
import com.lw.italk.greendao.GroupItemDao;
import com.lw.italk.greendao.MessageDao;
import com.lw.italk.greendao.BlackListDao;
import com.lw.italk.greendao.GroupDao;
import com.lw.italk.greendao.ContactDao;
import com.lw.italk.greendao.SearchAddDao;
import com.lw.italk.greendao.UserInfoDao;
import com.lw.italk.greendao.ConversationDao;
import com.lw.italk.greendao.ChatLogDao;
import com.lw.italk.greendao.RequestTimeDao;
import com.lw.italk.greendao.GroupMemberDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig getAddFrienditemDaoConfig;
    private final DaoConfig msgItemDaoConfig;
    private final DaoConfig groupItemDaoConfig;
    private final DaoConfig messageDaoConfig;
    private final DaoConfig blackListDaoConfig;
    private final DaoConfig groupDaoConfig;
    private final DaoConfig contactDaoConfig;
    private final DaoConfig searchAddDaoConfig;
    private final DaoConfig userInfoDaoConfig;
    private final DaoConfig conversationDaoConfig;
    private final DaoConfig chatLogDaoConfig;
    private final DaoConfig requestTimeDaoConfig;
    private final DaoConfig groupMemberDaoConfig;

    private final GetAddFrienditemDao getAddFrienditemDao;
    private final MsgItemDao msgItemDao;
    private final GroupItemDao groupItemDao;
    private final MessageDao messageDao;
    private final BlackListDao blackListDao;
    private final GroupDao groupDao;
    private final ContactDao contactDao;
    private final SearchAddDao searchAddDao;
    private final UserInfoDao userInfoDao;
    private final ConversationDao conversationDao;
    private final ChatLogDao chatLogDao;
    private final RequestTimeDao requestTimeDao;
    private final GroupMemberDao groupMemberDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        getAddFrienditemDaoConfig = daoConfigMap.get(GetAddFrienditemDao.class).clone();
        getAddFrienditemDaoConfig.initIdentityScope(type);

        msgItemDaoConfig = daoConfigMap.get(MsgItemDao.class).clone();
        msgItemDaoConfig.initIdentityScope(type);

        groupItemDaoConfig = daoConfigMap.get(GroupItemDao.class).clone();
        groupItemDaoConfig.initIdentityScope(type);

        messageDaoConfig = daoConfigMap.get(MessageDao.class).clone();
        messageDaoConfig.initIdentityScope(type);

        blackListDaoConfig = daoConfigMap.get(BlackListDao.class).clone();
        blackListDaoConfig.initIdentityScope(type);

        groupDaoConfig = daoConfigMap.get(GroupDao.class).clone();
        groupDaoConfig.initIdentityScope(type);

        contactDaoConfig = daoConfigMap.get(ContactDao.class).clone();
        contactDaoConfig.initIdentityScope(type);

        searchAddDaoConfig = daoConfigMap.get(SearchAddDao.class).clone();
        searchAddDaoConfig.initIdentityScope(type);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        conversationDaoConfig = daoConfigMap.get(ConversationDao.class).clone();
        conversationDaoConfig.initIdentityScope(type);

        chatLogDaoConfig = daoConfigMap.get(ChatLogDao.class).clone();
        chatLogDaoConfig.initIdentityScope(type);

        requestTimeDaoConfig = daoConfigMap.get(RequestTimeDao.class).clone();
        requestTimeDaoConfig.initIdentityScope(type);

        groupMemberDaoConfig = daoConfigMap.get(GroupMemberDao.class).clone();
        groupMemberDaoConfig.initIdentityScope(type);

        getAddFrienditemDao = new GetAddFrienditemDao(getAddFrienditemDaoConfig, this);
        msgItemDao = new MsgItemDao(msgItemDaoConfig, this);
        groupItemDao = new GroupItemDao(groupItemDaoConfig, this);
        messageDao = new MessageDao(messageDaoConfig, this);
        blackListDao = new BlackListDao(blackListDaoConfig, this);
        groupDao = new GroupDao(groupDaoConfig, this);
        contactDao = new ContactDao(contactDaoConfig, this);
        searchAddDao = new SearchAddDao(searchAddDaoConfig, this);
        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);
        conversationDao = new ConversationDao(conversationDaoConfig, this);
        chatLogDao = new ChatLogDao(chatLogDaoConfig, this);
        requestTimeDao = new RequestTimeDao(requestTimeDaoConfig, this);
        groupMemberDao = new GroupMemberDao(groupMemberDaoConfig, this);

        registerDao(GetAddFrienditem.class, getAddFrienditemDao);
        registerDao(MsgItem.class, msgItemDao);
        registerDao(GroupItem.class, groupItemDao);
        registerDao(Message.class, messageDao);
        registerDao(BlackList.class, blackListDao);
        registerDao(Group.class, groupDao);
        registerDao(Contact.class, contactDao);
        registerDao(SearchAdd.class, searchAddDao);
        registerDao(UserInfo.class, userInfoDao);
        registerDao(Conversation.class, conversationDao);
        registerDao(ChatLog.class, chatLogDao);
        registerDao(RequestTime.class, requestTimeDao);
        registerDao(GroupMember.class, groupMemberDao);
    }
    
    public void clear() {
        getAddFrienditemDaoConfig.clearIdentityScope();
        msgItemDaoConfig.clearIdentityScope();
        groupItemDaoConfig.clearIdentityScope();
        messageDaoConfig.clearIdentityScope();
        blackListDaoConfig.clearIdentityScope();
        groupDaoConfig.clearIdentityScope();
        contactDaoConfig.clearIdentityScope();
        searchAddDaoConfig.clearIdentityScope();
        userInfoDaoConfig.clearIdentityScope();
        conversationDaoConfig.clearIdentityScope();
        chatLogDaoConfig.clearIdentityScope();
        requestTimeDaoConfig.clearIdentityScope();
        groupMemberDaoConfig.clearIdentityScope();
    }

    public GetAddFrienditemDao getGetAddFrienditemDao() {
        return getAddFrienditemDao;
    }

    public MsgItemDao getMsgItemDao() {
        return msgItemDao;
    }

    public GroupItemDao getGroupItemDao() {
        return groupItemDao;
    }

    public MessageDao getMessageDao() {
        return messageDao;
    }

    public BlackListDao getBlackListDao() {
        return blackListDao;
    }

    public GroupDao getGroupDao() {
        return groupDao;
    }

    public ContactDao getContactDao() {
        return contactDao;
    }

    public SearchAddDao getSearchAddDao() {
        return searchAddDao;
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

    public ConversationDao getConversationDao() {
        return conversationDao;
    }

    public ChatLogDao getChatLogDao() {
        return chatLogDao;
    }

    public RequestTimeDao getRequestTimeDao() {
        return requestTimeDao;
    }

    public GroupMemberDao getGroupMemberDao() {
        return groupMemberDao;
    }

}
